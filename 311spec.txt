This is just to help keep track of what has been done. Lines will be removed when they aren't needed anymore.

==================================================================
 	 
    GET service_request_id from a token
    Conditional	Yes - This call is only necessary if the response from POST Service Request contains a token
    Purpose	Get the service_request_id from a temporary token. This is unnecessary if the response from creating a service request does not contain a token.
    URL	[https://API endpoint]/tokens/[token id].[format]
    Sample URL	https://api.city.gov/dev/v2/tokens/123456.xml?jurisdiction_id=city.gov
    Formats	XML (JSON available if denoted by Service Discovery)
    HTTP Method	GET
    Requires API Key	No
    Required Arguments

    Field Name	Description	Notes & Requirements
    jurisdiction_id	 	This is only required if the endpoint serves multiple jurisdictions
    token	 	This is obtained from the POST Service Requests method
    Response

    Field Name	Description	Notes & Requirements
    service_requests ⇊	 	 
    request ↴	 	 
    service_request_id	The unique ID for the service request created. This can be used to call the GET Service Request method.	 
    token	The token ID used to make this call.	 
    Possible Errors

    The numbers represent the HTTP status code returned for each error type:

    404 - jurisdiction_id or token not found (specified in error response)
    400 - jurisdiction_id or token was not provided (specified in error response)
    400 - General Service error (Any failure during service query processing. Client will have to notify us)
    Example Response

    XML
    JSON
    <?xml version="1.0" encoding="utf-8"?>
    <service_requests>
        <request>
            <service_request_id>638344</service_request_id>
            <token>12345</token>
        </request>
    </service_requests>

GET Service Requests
Purpose	Query the current status of multiple requests
URL	https://[API endpoint]/requests.[format]
Sample URL	https://api.city.gov/dev/v2/requests.xml?start_date=2010-05-24T00:00:00Z&end_date=2010-06-24T00:00:00Z&status=open&jurisdiction_id=city.gov
Formats	XML (JSON available if denoted by Service Discovery)
HTTP Method	GET
Requires API Key	No
Required Arguments

Field Name	Description	Notes & Requirements
jurisdiction_id	 	This is only required if the endpoint serves multiple jurisdictions
Optional Arguments

Field Name	Description	Notes & Requirements
service_request_id	To call multiple Service Requests at once, multiple service_request_id can be declared; comma delimited.	This overrides all other arguments.
service_code	Specify the service type by calling the unique ID of the service_code.	This defaults to all service codes when not declared; can be declared multiple times, comma delimited
start_date	Earliest datetime to include in search. When provided with end_date, allows one to search for requests which have a requested_datetime that matches a given range, but may not span more than 90 days.	When not specified, the range defaults to most recent 90 days. Must use w3 format, eg 2010-01-01T00:00:00Z.
end_date	Latest datetime to include in search. When provided with start_date, allows one to search for requests which have a requested_datetime that matches a given range, but may not span more than 90 days.	When not specified, the range defaults to most recent 90 days. Must use w3 format, eg 2010-01-01T00:00:00Z.
status	Allows one to search for requests which have a specific status. This defaults to all statuses; can be declared multiple times, comma delimited;	Options: open, closed
Response

Field Name	Description	Notes & Requirements
service_requests ⇊	 	 
request ↴	 	 
service_request_id	The unique ID of the service request created.	 
status	The current status of the service request. 

open: it has been reported. 

closed: it has been resolved.	Options: open, closed
status_notes	Explanation of why status was changed to current state or more details on current status than conveyed with status alone.	May not be returned
service_name	The human readable name of the service request type	 
service_code	The unique identifier for the service request type	 
description	A full description of the request or report submitted.	This may contain line breaks, but not html or code. Otherwise, this is free form text limited to 4,000 characters.
agency_responsible	The agency responsible for fulfilling or otherwise addressing the service request.	May not be returned
service_notice	Information about the action expected to fulfill the request or otherwise address the information reported.	May not be returned
requested_datetime	The date and time when the service request was made.	Returned in w3 format, eg 2010-01-01T00:00:00Z
updated_datetime	The date and time when the service request was last modified. For requests with status=closed, this will be the date the request was closed.	Returned in w3 format, eg 2010-01-01T00:00:00Z
expected_datetime	The date and time when the service request can be expected to be fulfilled. This may be based on a service-specific service level agreement.	May not be returned
address	Human readable address or description of location.	This should be provided from most specific to most general geographic unit, eg address number or cross streets, street name, neighborhood/district, city/town/village, county, postal code.
address_id	The internal address ID used by a jurisdictions master address repository or other addressing system.	 
zipcode	The postal code for the location of the service request.	 
lat	latitude using the (WGS84) projection.	 
long	longitude using the (WGS84) projection.	 
media_url	A URL to media associated with the request, eg an image.	A convention for parsing media from this URL has yet to be established, so currently it will be done on a case by case basis much like Twitter.com does. For example, if a jurisdiction accepts photos submitted via Twitpic.com, then clients can parse the page at the Twitpic URL for the image given the conventions of Twitpic.com. This could also be a URL to a media RSS feed where the clients can parse for media in a more structured way.
Response Volume

Default query limit is a span of 90 days or first 1000 requests returned, whichever is smallest.
Possible Errors

The numbers represent the HTTP status code returned for each error type:

404 - jurisdiction_id not found (specified in error response)
400 - jurisdiction_id was not provided (specified in error response)
400 - General Service error (Any failure during service query processing. Client will have to notify us)
Example Response

XML
JSON
<?xml version="1.0" encoding="utf-8"?>
<service_requests>
    <request>
        <service_request_id>638344</service_request_id>
        <status>closed</status>
        <status_notes>Duplicate request.</status_notes>
        <service_name>Sidewalk and Curb Issues</service_name>
        <service_code>006</service_code>
        <description></description>
        <agency_responsible></agency_responsible>
        <service_notice></service_notice>
        <requested_datetime>2010-04-14T06:37:38-08:00</requested_datetime>
        <updated_datetime>2010-04-14T06:37:38-08:00</updated_datetime>
        <expected_datetime>2010-04-15T06:37:38-08:00</expected_datetime>
        <address>8TH AVE and JUDAH ST</address>
        <address_id>545483</address_id>
        <zipcode>94122</zipcode>
        <lat>37.762221815</lat>
        <long>-122.4651145</long>
        <media_url>http://city.gov.s3.amazonaws.com/requests/media/638344.jpg </media_url>
    </request>
    <request>
        <service_request_id>638349</service_request_id>
        <status>open</status>
        <status_notes></status_notes>
        <service_name>Sidewalk and Curb Issues</service_name>
        <service_code>006</service_code>
        <description></description>
        <agency_responsible></agency_responsible>
        <service_notice></service_notice>
        <requested_datetime>2010-04-19T06:37:38-08:00</requested_datetime>
        <updated_datetime>2010-04-19T06:37:38-08:00</updated_datetime>
        <expected_datetime>2010-04-19T06:37:38-08:00</expected_datetime>
        <address>8TH AVE and JUDAH ST</address>
        <address_id>545483</address_id>
        <zipcode>94122</zipcode>
        <lat>37.762221815</lat>
        <long>-122.4651145</long>
        <media_url>http://city.gov.s3.amazonaws.com/requests/media/638349.jpg </media_url>
    </request>
</service_requests>
GET Service Request
Purpose	Query the current status of an individual request
URL	https://[API endpoint]/requests/[service_request_id].[format]
Sample URL	https://api.city.gov/dev/v2/requests/123456.xml?jurisdiction_id=city.gov
Formats	XML (JSON available if denoted by Service Discovery)
HTTP Method	GET
Requires API Key	No
Required Arguments

Field Name	Description	Notes & Requirements
jurisdiction_id	 	This is only required if the endpoint serves multiple jurisdictions
service_request_id	 	The service_request_id is specified in the main URL path rather than an added query string parameter.
Optional Arguments

None

Response

Field Name	Description	Notes & Requirements
service_requests ⇊	 	 
request ↴	 	 
service_request_id	The unique ID of the service request created.	 
status	The current status of the service request. 

open: it has been reported. 

closed: it has been resolved.	Options: open, closed
status_notes	Explanation of why status was changed to current state or more details on current status than conveyed with status alone.	May not be returned
service_name	The human readable name of the service request type	 
service_code	The unique identifier for the service request type	 
description	A full description of the request or report submitted.	This may contain line breaks, but not html or code. Otherwise, this is free form text limited to 4,000 characters.
agency_responsible	The agency responsible for fulfilling or otherwise addressing the service request.	May not be returned
service_notice	Information about the action expected to fulfill the request or otherwise address the information reported.	May not be returned
requested_datetime	The date and time when the service request was made.	Returned in w3 format, eg 2010-01-01T00:00:00Z
updated_datetime	The date and time when the service request was last modified. For requests with status=closed, this will be the date the request was closed.	Returned in w3 format, eg 2010-01-01T00:00:00Z
expected_datetime	The date and time when the service request can be expected to be fulfilled. This may be based on a service-specific service level agreement.	May not be returned
address	Human readable address or description of location.	This should be provided from most specific to most general geographic unit, eg address number or cross streets, street name, neighborhood/district, city/town/village, county, postal code.
address_id	The internal address ID used by a jurisdictions master address repository or other addressing system.	 
zipcode	The postal code for the location of the service request.	 
lat	latitude using the (WGS84) projection.	 
long	longitude using the (WGS84) projection.	 
media_url	A URL to media associated with the request, eg an image.	A convention for parsing media from this URL has yet to be established, so currently it will be done on a case by case basis much like Twitter.com does. For example, if a jurisdiction accepts photos submitted via Twitpic.com, then clients can parse the page at the Twitpic URL for the image given the conventions of Twitpic.com. This could also be a URL to a media RSS feed where the clients can parse for media in a more structured way.
Possible Errors

The numbers represent the HTTP status code returned for each error type:

404 - jurisdiction_id not found (specified in error response)
400 - jurisdiction_id was not provided (specified in error response)
400 - General Service error (Any failure during service query processing. Client will have to notify us)
Example Response

XML
JSON
<?xml version="1.0" encoding="utf-8"?>
<service_requests>
    <request>
        <service_request_id>638344</service_request_id>
        <status>closed</status>
        <status_notes>Duplicate request.</status_notes>
        <service_name>Sidewalk and Curb Issues</service_name>
        <service_code>006</service_code>
        <description></description>
        <agency_responsible></agency_responsible>
        <service_notice></service_notice>
        <requested_datetime>2010-04-14T06:37:38-08:00</requested_datetime>
        <updated_datetime>2010-04-14T06:37:38-08:00</updated_datetime>
        <expected_datetime>2010-04-15T06:37:38-08:00</expected_datetime>
        <address>8TH AVE and JUDAH ST</address>
        <address_id>545483</address_id>
        <zipcode>94122</zipcode>
        <lat>37.762221815</lat>
        <long>-122.4651145</long>
        <media_url>http://city.gov.s3.amazonaws.com/requests/media/638344.jpg </media_url>
    </request>
</service_requests>
Errors
Response

Field Name	Description	Notes & Requirements
errors ⇊	 	 
error ↴	 	 
code	The error code representing the type of error. In most cases, this should match the HTTP status code returned in the HTTP header.	 
description	A human readable description of the error that occurred. This is meant to be seen by the user.	 
General Errors
403 - Missing or Invalid API Key (specify in error message)
400 - The URL request is invalid or open311 service is not running or reachable. Client should notify us after checking URL
HTTP error codes are required, but the code in the response body shouldn’t necessarily match the HTTP error code, so that more specific and unique error code identifiers can be used. The HTTP error codes should always be 404 for resources that don’t exist, 403 for errors because of wrong or missing api_key and basically 400 for any other error where the request can not be fulfilled as expected. Multiple errors codes and descriptions can be returned in the body (the response is an array).

Example Response

XML
JSON
HTTP/1.1 403 Forbidden

<?xml version="1.0" encoding="utf-8"?>
<errors>
    <error>
        <code>403</code>
        <description>Invalid api_key received -- can't proceed with create_request.</description>
    </error>
</errors>






















Not sure what to do with this yet:
======================================================
Field Name  Description Notes & Requirements
attribute   An array of key/value responses based on Service Definitions.   This takes the form of attribute[code]=value where multiple code/value pairs can be specified as well as multiple values for the same code in the case of a multivaluelist datatype (attribute[code1][]=value1&attribute[code1][]=value2&attribute[code1][]=value3) - see example. 






GET Service Definition
Conditional Yes - This call is only necessary if the Service selected has metadata set as true from the GET Services response
Purpose Define attributes associated with a service code. These attributes can be unique to the city/jurisdiction.
URL https://[API endpoint]/services/[service_code].[format]
Sample URL  https://api.city.gov/dev/v2/services/033.xml?jurisdiction_id=city.gov
Formats XML (JSON available if denoted by Service Discovery)
HTTP Method GET
Requires API Key    No
Required Arguments

Field Name  Description Notes & Requirements
jurisdiction_id     This is only required if the endpoint serves multiple jurisdictions
service_code        The service_code is specified in the main URL path rather than an added query string parameter.
Response

Field Name  Description Notes & Requirements
service_definition ↴         
service_code    Returns the service_code associated with the definition, the same one submitted for this call.   
attributes ⇊         
attribute ↴      
variable    true denotes that user input is needed 

false means the attribute is only used to present information to the user within the description field  Possible values: true, false.
code    A unique identifier for the attribute    
datatype    Denotes the type of field used for user input. 

string: A string of characters without line breaks. Represented in an HTML form using an <input> tag 

number: A numeric value. Represented in an HTML form using an <input> tag 

datetime: The input generated must be able to transform into a valid ISO 8601 date. Represented in an HTML form using <input> tags 

text: A string of characters that may contain line breaks. Represented in an HTML form using an <textarea> tag 

singlevaluelist: A set of predefined values (specified in this response) where only one value may be selected. Represented in an HTML form using the <select> and <option> tags 

multivaluelist: A set of predefined values (specified in this response) where several values may be selected. Represented in an HTML form using the <select multiple="multiple"> and <option> tags  Options: string, number, datetime, text, singlevaluelist, multivaluelist.
required    true means that the value is required to submit service request 

false means that the value not required.    Options: true, false.
datatype_description    A description of the datatype which helps the user provide their input   
order   The sort order that the attributes will be presented to the user. 1 is shown first in the list. Any positive integer not used for other attributes in the same service_code
description An description of the attribute field with instructions for the user to find and identify the requested information  
values ⇊         
value ↴      
key The unique identifier associated with an option for singlevaluelist or multivaluelist. This is analogous to the value attribute in an html option tag.   
name    The human readable title of an option for singlevaluelist or multivaluelist. This is analogous to the innerhtml text node of an html option tag.     
Possible Errors

The numbers represent the HTTP status code returned for each error type:

404 - service_code or jurisdiction_id provided were not found (specify in error response)
400 - service_code or jurisdiction_id was not provided (specify in error response)
400 - General service error (Anything that fails during service list processing. The client will need to notify us)
Example Response

XML
JSON
<?xml version="1.0" encoding="utf-8"?>
<service_definition>
    <service_code>DMV66</service_code>
    <attributes>
        <attribute>
            <variable>true</variable>
            <code>WHISHETN</code>
            <datatype>singlevaluelist</datatype>
            <required>true</required>
            <datatype_description></datatype_description>
            <order>1</order>
            <description>What is the ticket/tag/DL number?</description>
            <values>
                <value>
                    <key>123</key>
                    <name>Ford</name>
                </value>
                <value>
                    <key>124</key>
                    <name>Chrysler</name>
                </value>
            </values>
        </attribute>
    </attributes>
</service_definition>